services:
  frontend:
    init: true
    restart: always
    build:
      context: ./frontend
    environment:
      NODE_ENV: production
    ports:
      - "8080:8080"
    env_file:
      - frontend/.env
  backend-data-layer:
    build:
      context: backend/data-layer
    ports:
      - "8002:8002"
    environment:
      POSTGRES_USER: backend
      POSTGRES_PASSWORD: backend
      POSTGRES_DB: backend
      DB_HOST: postgres
      DB_PORT: 5432
    depends_on:
      postgres:
        condition: service_healthy
  backend-reverse-proxy:
    build:
      context: backend/reverse-proxy
    ports:
      - "8000:8000"
    environment:
      FB_URL: "http://backend-fastapi-backend:8001"
      FA_URL: "http://algorithms:80"
    depends_on:
      backend-fastapi-backend:
        condition: service_started
  backend-fastapi-backend:
    build:
      context: backend/fastapi-backend
    ports:
      - "8001:8001"
    environment:
      DATA_LAYER_URL: http://backend-data-layer:8002
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_started
      backend-data-layer:
        condition: service_started
  algorithms-kafka-consumer:
    build:
      context: algorithms
      dockerfile: kafka/Dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPICS: create-listing delete-listing update-listing view-listing create-user edit-user delete-user create-review edit-review delete-review
      POSTGRES_SCHEME: postgresql://
      POSTGRES_USER: algorithms
      POSTGRES_PASSWORD: algorithms
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_NAME: algorithms
      ELASTICSEARCH_URL: http://elasticsearch:9200
  algorithms:
    build:
      context: algorithms
      dockerfile: fastapi/Dockerfile
    ports:
      - "8004:80"
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      HF_HOME: /.cache
      #DATABASE_URL: postgresql://algorithms:algorithms@postgres:5432/algorithms
      POSTGRES_SCHEME: postgresql://
      POSTGRES_USER: algorithms
      POSTGRES_PASSWORD: algorithms
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      POSTGRES_NAME: algorithms
      ELASTICSEARCH_URL: http://elasticsearch:9200
    volumes:
      - ./elastic_cache:/.cache
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.21
    environment:
      - discovery.type=single-node
    volumes:
      - ./elastic_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
  postgres:
    image: postgres:13
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh
    environment:
      POSTGRES_MULTIPLE_DATABASES: algorithms,backend
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d postgres || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
  kafka:
    image: apache/kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://kafka:9092,PLAINTEXT://kafka:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
